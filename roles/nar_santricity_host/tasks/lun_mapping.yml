- name: Collect facts on the storage array
  na_santricity_facts:
    ssid: "{{ current_eseries_ssid }}"
    api_url: "{{ current_eseries_api_url }}"
    api_username: "{{ current_eseries_api_username }}"
    api_password: "{{ current_eseries_api_password }}"
    validate_certs: "{{ current_eseries_validate_certs | default(omit) }}"
  register: storage_array_facts

- name: Collect volume host and host group list
  set_fact:
    hosts: "{{ lookup('netapp_eseries.santricity.santricity_host', hostvars[inventory_hostname]) }}"

- name: Retrieve required details and map luns
  block:
    - name: Collect host/host group networking information
      setup:
      register: hosts_info
      delegate_to: "{{ item }}"
      delegate_facts: True
      loop: "{{ lookup('list', (hosts['expected_hosts'].keys()|list)) }}"

    - name: Collect host and host group interface information for Linux
      shell: "{{ eseries_initiator_command[eseries_initiator_protocol]['linux'] }}"
      register: host_interface_linux
      delegate_to: "{{ item }}"
      become: True
      changed_when: False
      failed_when: "host_interface_linux.rc != 0"
      when: hostvars[item]['ansible_facts']['system'] == "Linux" and eseries_initiator_command[eseries_initiator_protocol]['linux']
      loop: "{{ lookup('list', (hosts['expected_hosts'].keys()|list)) }}"

    - name: Collect host and host group interface information for Windows
      win_shell: "{{ eseries_initiator_command[eseries_initiator_protocol]['windows'] }}"
      register: host_interface_windows
      delegate_to: "{{ item }}"
      changed_when: False
      failed_when: "host_interface_windows.rc != 0"
      when: hostvars[item]['ansible_facts']['os_family'] == "Windows" and eseries_initiator_command[eseries_initiator_protocol]['windows']
      loop: "{{ lookup('list', (hosts['expected_hosts'].keys()|list)) }}"

    - name: Aggregate host/host group interface isnformation
      set_fact:
        host_interface: "{{ host_interface_linux['results'] + host_interface_windows['results'] }}"

    - name: Organize host/host group interface information and update hosts variable
      set_fact:
        hosts: "{{ lookup('netapp_eseries.santricity.santricity_host_detail',
                           hosts, hosts_info=hosts_info['results'], host_interface_ports=host_interface, protocol=eseries_initiator_protocol) }}"

    - name: Create all hosts objects on the storage array
      na_santricity_host:
        ssid: "{{ current_eseries_ssid }}"
        api_url: "{{ current_eseries_api_url }}"
        api_username: "{{ current_eseries_api_username }}"
        api_password: "{{ current_eseries_api_password }}"
        validate_certs: "{{ current_eseries_validate_certs | default(omit) }}"
        state: "{{ hosts['expected_hosts'][item]['state'] | default(omit) }}"
        name: "{{ hosts['expected_hosts'][item]['sanitized_hostname'] }}"
        ports: "{{ hosts['expected_hosts'][item]['ports'] }}"
        force_port: "{{ eseries_host_force_port | default(omit) }}"
        host_type: "{{ hosts['expected_hosts'][item]['host_type'] | default(omit) }}"
      loop: "{{ lookup('list', (hosts['expected_hosts'].keys()|list)) }}"

    - name: Create all required host groups on the storage array
      na_santricity_hostgroup:
        ssid: "{{ current_eseries_ssid }}"
        api_url: "{{ current_eseries_api_url }}"
        api_username: "{{ current_eseries_api_username }}"
        api_password: "{{ current_eseries_api_password }}"
        validate_certs: "{{ current_eseries_validate_certs | default(omit) }}"
        state: present
        name: "{{ item }}"
        hosts: "{{ hosts['host_groups'][item] | default(omit) }}"
      loop: "{{ lookup('list', (hosts['host_groups'].keys()|list)) }}"

    - name: Update facts on the storage array
      na_santricity_facts:
        ssid: "{{ current_eseries_ssid }}"
        api_url: "{{ current_eseries_api_url }}"
        api_username: "{{ current_eseries_api_username }}"
        api_password: "{{ current_eseries_api_password }}"
        validate_certs: "{{ current_eseries_validate_certs | default(omit) }}"
      register: storage_array_facts

    - name: Map hosts to there respective volume
      na_santricity_lun_mapping:
        ssid: "{{ current_eseries_ssid }}"
        api_url: "{{ current_eseries_api_url }}"
        api_username: "{{ current_eseries_api_username }}"
        api_password: "{{ current_eseries_api_password }}"
        validate_certs: "{{ current_eseries_validate_certs | default(omit) }}"
        state: "present"
        volume: "{{ item['volume'] }}"
        target: "{{ item['target'] | default(eseries_lun_mapping_host) }}"
        lun: "{{ item['lun'] }}"
      loop: "{{ lookup('netapp_eseries.santricity.santricity_lun_mapping', storage_array_facts,
                       volumes=lookup('netapp_eseries.santricity.santricity_volume', hostvars[inventory_hostname]), wantlist=True) }}"
  when: hosts != []
