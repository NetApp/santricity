- name: Verify all expected volumes are present
  stat:
    path: "/dev/mapper/3{{ item['wwn'] | lower }}"
  loop: "{{ lookup('list', storage_volumes + metadata_volumes) }}"
  register: volume_stats

- name: Determine whether BeeGFS node SCSI rescan is required
  set_fact:
    beegfs_node_scsi_rescan_required: |-
      {%- set missing=[] %}
      {%- for item in volume_stats["results"] %}
        {%- if item["stat"]["exists"] == False %}
          {%- if missing.append(item) %}{%- endif %}
        {%- endif %}
      {%- endfor %}
      {{ missing | length > 0 }}

- name: If expected volumes are missing, rescan scsi bus and reload multipath
  block:
    - name: Rescan scsi bus and devices
      shell: "{{ item }}"
      loop:
        - "for x in $(ls /sys/class/scsi_host); do echo '- - -' > /sys/class/scsi_host/$x/scan; done &> /dev/null"
        - "for x in $(ls /sys/block); do echo 1 > /sys/block/$x/device/rescan; done &> /dev/null"
    - name: Reload multipath
      systemd:
        name: multipathd.service
        state: restarted
        daemon_reload: true
    - name: Verify all expected volumes are present
      stat:
        path: "/dev/mapper/3{{ item['wwn'] | lower }}"
      loop: "{{ lookup('list', storage_volumes + metadata_volumes) }}"
      register: volume_stats
    - name: Determine whether BeeGFS node reboot is required
      set_fact:
        beegfs_node_reboot_required: |-
          {%- set missing=[] %}
          {%- for item in volume_stats["results"] %}
            {%- if item["stat"]["exists"] == False %}
              {%- if missing.append(item) %}{%- endif %}
            {%- endif %}
          {%- endfor %}
          {{ missing | length > 0 }}
    - name: Reboot BeeGFS nodes where volumes are missing
      reboot:
      when: beegfs_node_reboot_required
  when: beegfs_node_scsi_rescan_required

- name: Format BeeGFS Storage volumes using xfs.
  filesystem:
    fstype: xfs
    dev: "/dev/mapper/3{{ item['wwn'] | lower }}"
    opts: "-d su={{ beegfs_segment_size }},sw={{ beegfs_stripe_count }} -l version=2,su={{ beegfs_segment_size }}"
  loop: "{{ lookup('list', storage_volumes) }}"

- name: Format BeeGFS Metadata volumes using ext4.
  filesystem:
    fstype: ext4
    dev: "/dev/mapper/3{{ item['wwn'] | lower }}"
    opts: "-i 2048 -I 512 -J size=400 -Odir_index,filetype"
  loop: "{{ lookup('list', metadata_volumes) }}"

- name: Mount BeeGFS Storage volume (quotas disabled).
  mount:
    path: "/data/beegfs/{{ item['name'] }}"
    src: "/dev/mapper/3{{ item['wwn'] | lower }}"
    fstype: xfs
    state: mounted
    opts: "noatime,nodiratime,logbufs=8,logbsize=256k,largeio,inode64,swalloc,allocsize=131072k,nobarrier,_netdev"
  loop: "{{ lookup('list', storage_volumes) }}"
  when: "beegfs_enable_quota != True"

- name: Mount BeeGFS Storage volume (quotas enabled).
  mount:
    path: "/data/beegfs/{{ item['name'] }}"
    src: "/dev/mapper/3{{ item['wwn'] | lower }}"
    fstype: xfs
    state: mounted
    opts: "uqnoenforce,gqnoenforce,noatime,nodiratime,logbufs=8,logbsize=256k,largeio,inode64,swalloc,allocsize=131072k,nobarrier,_netdev"
  loop: "{{ lookup('list', storage_volumes) }}"
  when: "beegfs_enable_quota == True"

- name: Mount BeeGFS Metadata volume.
  mount:
    path: "/data/beegfs/{{ item['name'] }}"
    src: "/dev/mapper/3{{ item['wwn'] | lower }}"
    fstype: ext4
    state: mounted
    opts: "noatime,nodiratime,nobarrier,_netdev"
  loop: "{{ lookup('list', metadata_volumes) }}"